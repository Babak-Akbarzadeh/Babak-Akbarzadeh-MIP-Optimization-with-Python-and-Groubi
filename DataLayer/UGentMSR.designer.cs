#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
 
    using System.Linq;
    using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UGentMedicalStudentRostering")]
	public partial class UGentMSRDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMSRAbilityIDInfo(MSRAbilityIDInfo instance);
    partial void UpdateMSRAbilityIDInfo(MSRAbilityIDInfo instance);
    partial void DeleteMSRAbilityIDInfo(MSRAbilityIDInfo instance);
    partial void InsertMSRWardInfo(MSRWardInfo instance);
    partial void UpdateMSRWardInfo(MSRWardInfo instance);
    partial void DeleteMSRWardInfo(MSRWardInfo instance);
    partial void InsertMSRAvailablityInfo(MSRAvailablityInfo instance);
    partial void UpdateMSRAvailablityInfo(MSRAvailablityInfo instance);
    partial void DeleteMSRAvailablityInfo(MSRAvailablityInfo instance);
    partial void InsertMSRDiscGroupInfo(MSRDiscGroupInfo instance);
    partial void UpdateMSRDiscGroupInfo(MSRDiscGroupInfo instance);
    partial void DeleteMSRDiscGroupInfo(MSRDiscGroupInfo instance);
    partial void InsertMSRDisciplineInfo(MSRDisciplineInfo instance);
    partial void UpdateMSRDisciplineInfo(MSRDisciplineInfo instance);
    partial void DeleteMSRDisciplineInfo(MSRDisciplineInfo instance);
    partial void InsertMSRDisciplineListInfo(MSRDisciplineListInfo instance);
    partial void UpdateMSRDisciplineListInfo(MSRDisciplineListInfo instance);
    partial void DeleteMSRDisciplineListInfo(MSRDisciplineListInfo instance);
    partial void InsertMSRDisciplinePrecedenceInfo(MSRDisciplinePrecedenceInfo instance);
    partial void UpdateMSRDisciplinePrecedenceInfo(MSRDisciplinePrecedenceInfo instance);
    partial void DeleteMSRDisciplinePrecedenceInfo(MSRDisciplinePrecedenceInfo instance);
    partial void InsertMSRHospitalInfo(MSRHospitalInfo instance);
    partial void UpdateMSRHospitalInfo(MSRHospitalInfo instance);
    partial void DeleteMSRHospitalInfo(MSRHospitalInfo instance);
    partial void InsertMSRHospitalWardDemandInfo(MSRHospitalWardDemandInfo instance);
    partial void UpdateMSRHospitalWardDemandInfo(MSRHospitalWardDemandInfo instance);
    partial void DeleteMSRHospitalWardDemandInfo(MSRHospitalWardDemandInfo instance);
    partial void InsertMSRListInfo(MSRListInfo instance);
    partial void UpdateMSRListInfo(MSRListInfo instance);
    partial void DeleteMSRListInfo(MSRListInfo instance);
    partial void InsertMSROverseaInfo(MSROverseaInfo instance);
    partial void UpdateMSROverseaInfo(MSROverseaInfo instance);
    partial void DeleteMSROverseaInfo(MSROverseaInfo instance);
    partial void InsertMSROverseaRequestInfo(MSROverseaRequestInfo instance);
    partial void UpdateMSROverseaRequestInfo(MSROverseaRequestInfo instance);
    partial void DeleteMSROverseaRequestInfo(MSROverseaRequestInfo instance);
    partial void InsertMSRProblemSettingInfo(MSRProblemSettingInfo instance);
    partial void UpdateMSRProblemSettingInfo(MSRProblemSettingInfo instance);
    partial void DeleteMSRProblemSettingInfo(MSRProblemSettingInfo instance);
    partial void InsertMSRProgramDiscPrfInfo(MSRProgramDiscPrfInfo instance);
    partial void UpdateMSRProgramDiscPrfInfo(MSRProgramDiscPrfInfo instance);
    partial void DeleteMSRProgramDiscPrfInfo(MSRProgramDiscPrfInfo instance);
    partial void InsertMSRRegionInfo(MSRRegionInfo instance);
    partial void UpdateMSRRegionInfo(MSRRegionInfo instance);
    partial void DeleteMSRRegionInfo(MSRRegionInfo instance);
    partial void InsertMSRStudentDiscPrfInfo(MSRStudentDiscPrfInfo instance);
    partial void UpdateMSRStudentDiscPrfInfo(MSRStudentDiscPrfInfo instance);
    partial void DeleteMSRStudentDiscPrfInfo(MSRStudentDiscPrfInfo instance);
    partial void InsertMSRStudentFulfilledDiscInfo(MSRStudentFulfilledDiscInfo instance);
    partial void UpdateMSRStudentFulfilledDiscInfo(MSRStudentFulfilledDiscInfo instance);
    partial void DeleteMSRStudentFulfilledDiscInfo(MSRStudentFulfilledDiscInfo instance);
    partial void InsertMSRStudentHospPrfInfo(MSRStudentHospPrfInfo instance);
    partial void UpdateMSRStudentHospPrfInfo(MSRStudentHospPrfInfo instance);
    partial void DeleteMSRStudentHospPrfInfo(MSRStudentHospPrfInfo instance);
    partial void InsertMSRStudentInfo(MSRStudentInfo instance);
    partial void UpdateMSRStudentInfo(MSRStudentInfo instance);
    partial void DeleteMSRStudentInfo(MSRStudentInfo instance);
    partial void InsertMSRStudentRegionInfo(MSRStudentRegionInfo instance);
    partial void UpdateMSRStudentRegionInfo(MSRStudentRegionInfo instance);
    partial void DeleteMSRStudentRegionInfo(MSRStudentRegionInfo instance);
    partial void InsertMSRTrainingProgramInfo(MSRTrainingProgramInfo instance);
    partial void UpdateMSRTrainingProgramInfo(MSRTrainingProgramInfo instance);
    partial void DeleteMSRTrainingProgramInfo(MSRTrainingProgramInfo instance);
    partial void InsertMSRWardDiscHospitalInfo(MSRWardDiscHospitalInfo instance);
    partial void UpdateMSRWardDiscHospitalInfo(MSRWardDiscHospitalInfo instance);
    partial void DeleteMSRWardDiscHospitalInfo(MSRWardDiscHospitalInfo instance);
    partial void InsertMSRWardHospitalDemandInfo(MSRWardHospitalDemandInfo instance);
    partial void UpdateMSRWardHospitalDemandInfo(MSRWardHospitalDemandInfo instance);
    partial void DeleteMSRWardHospitalDemandInfo(MSRWardHospitalDemandInfo instance);
    partial void InsertMSRDiscDurationPrInfo(MSRDiscDurationPrInfo instance);
    partial void UpdateMSRDiscDurationPrInfo(MSRDiscDurationPrInfo instance);
    partial void DeleteMSRDiscDurationPrInfo(MSRDiscDurationPrInfo instance);
    #endregion
		
		public UGentMSRDataContext() : 
				base(global::DataLayer.Properties.Settings.Default.UGentMedicalStudentRosteringConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UGentMSRDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UGentMSRDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UGentMSRDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UGentMSRDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MSRAbilityIDInfo> MSRAbilityIDInfos
		{
			get
			{
				return this.GetTable<MSRAbilityIDInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRWardInfo> MSRWardInfos
		{
			get
			{
				return this.GetTable<MSRWardInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRAvailablityInfo> MSRAvailablityInfos
		{
			get
			{
				return this.GetTable<MSRAvailablityInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRDiscGroupInfo> MSRDiscGroupInfos
		{
			get
			{
				return this.GetTable<MSRDiscGroupInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRDisciplineInfo> MSRDisciplineInfos
		{
			get
			{
				return this.GetTable<MSRDisciplineInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRDisciplineListInfo> MSRDisciplineListInfos
		{
			get
			{
				return this.GetTable<MSRDisciplineListInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRDisciplinePrecedenceInfo> MSRDisciplinePrecedenceInfos
		{
			get
			{
				return this.GetTable<MSRDisciplinePrecedenceInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRHospitalInfo> MSRHospitalInfos
		{
			get
			{
				return this.GetTable<MSRHospitalInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRHospitalWardDemandInfo> MSRHospitalWardDemandInfos
		{
			get
			{
				return this.GetTable<MSRHospitalWardDemandInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRListInfo> MSRListInfos
		{
			get
			{
				return this.GetTable<MSRListInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSROverseaInfo> MSROverseaInfos
		{
			get
			{
				return this.GetTable<MSROverseaInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSROverseaRequestInfo> MSROverseaRequestInfos
		{
			get
			{
				return this.GetTable<MSROverseaRequestInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRProblemSettingInfo> MSRProblemSettingInfos
		{
			get
			{
				return this.GetTable<MSRProblemSettingInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRProgramDiscPrfInfo> MSRProgramDiscPrfInfos
		{
			get
			{
				return this.GetTable<MSRProgramDiscPrfInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRRegionInfo> MSRRegionInfos
		{
			get
			{
				return this.GetTable<MSRRegionInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRStudentDiscPrfInfo> MSRStudentDiscPrfInfos
		{
			get
			{
				return this.GetTable<MSRStudentDiscPrfInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRStudentFulfilledDiscInfo> MSRStudentFulfilledDiscInfos
		{
			get
			{
				return this.GetTable<MSRStudentFulfilledDiscInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRStudentHospPrfInfo> MSRStudentHospPrfInfos
		{
			get
			{
				return this.GetTable<MSRStudentHospPrfInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRStudentInfo> MSRStudentInfos
		{
			get
			{
				return this.GetTable<MSRStudentInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRStudentRegionInfo> MSRStudentRegionInfos
		{
			get
			{
				return this.GetTable<MSRStudentRegionInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRTrainingProgramInfo> MSRTrainingProgramInfos
		{
			get
			{
				return this.GetTable<MSRTrainingProgramInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRWardDiscHospitalInfo> MSRWardDiscHospitalInfos
		{
			get
			{
				return this.GetTable<MSRWardDiscHospitalInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRWardHospitalDemandInfo> MSRWardHospitalDemandInfos
		{
			get
			{
				return this.GetTable<MSRWardHospitalDemandInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSRDiscDurationPrInfo> MSRDiscDurationPrInfos
		{
			get
			{
				return this.GetTable<MSRDiscDurationPrInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRAbilityIDInfo")]
	public partial class MSRAbilityIDInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AbilityID;
		
		private System.Nullable<int> _StudentID;
		
		private System.Nullable<int> _DisciplineID;
		
		private System.Nullable<int> _HospitalID;
		
		private System.Nullable<bool> _ifAble;
		
		private System.Nullable<int> _StudentAbilityID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAbilityIDChanging(int value);
    partial void OnAbilityIDChanged();
    partial void OnStudentIDChanging(System.Nullable<int> value);
    partial void OnStudentIDChanged();
    partial void OnDisciplineIDChanging(System.Nullable<int> value);
    partial void OnDisciplineIDChanged();
    partial void OnHospitalIDChanging(System.Nullable<int> value);
    partial void OnHospitalIDChanged();
    partial void OnifAbleChanging(System.Nullable<bool> value);
    partial void OnifAbleChanged();
    partial void OnStudentAbilityIDChanging(System.Nullable<int> value);
    partial void OnStudentAbilityIDChanged();
    #endregion
		
		public MSRAbilityIDInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbilityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AbilityID
		{
			get
			{
				return this._AbilityID;
			}
			set
			{
				if ((this._AbilityID != value))
				{
					this.OnAbilityIDChanging(value);
					this.SendPropertyChanging();
					this._AbilityID = value;
					this.SendPropertyChanged("AbilityID");
					this.OnAbilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineID", DbType="Int")]
		public System.Nullable<int> DisciplineID
		{
			get
			{
				return this._DisciplineID;
			}
			set
			{
				if ((this._DisciplineID != value))
				{
					this.OnDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineID = value;
					this.SendPropertyChanged("DisciplineID");
					this.OnDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", DbType="Int")]
		public System.Nullable<int> HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					this.OnHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalID = value;
					this.SendPropertyChanged("HospitalID");
					this.OnHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ifAble", DbType="Bit")]
		public System.Nullable<bool> ifAble
		{
			get
			{
				return this._ifAble;
			}
			set
			{
				if ((this._ifAble != value))
				{
					this.OnifAbleChanging(value);
					this.SendPropertyChanging();
					this._ifAble = value;
					this.SendPropertyChanged("ifAble");
					this.OnifAbleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentAbilityID", DbType="Int")]
		public System.Nullable<int> StudentAbilityID
		{
			get
			{
				return this._StudentAbilityID;
			}
			set
			{
				if ((this._StudentAbilityID != value))
				{
					this.OnStudentAbilityIDChanging(value);
					this.SendPropertyChanging();
					this._StudentAbilityID = value;
					this.SendPropertyChanged("StudentAbilityID");
					this.OnStudentAbilityIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRWardInfo")]
	public partial class MSRWardInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WardID;
		
		private string _WardName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWardIDChanging(int value);
    partial void OnWardIDChanged();
    partial void OnWardNameChanging(string value);
    partial void OnWardNameChanged();
    #endregion
		
		public MSRWardInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WardID
		{
			get
			{
				return this._WardID;
			}
			set
			{
				if ((this._WardID != value))
				{
					this.OnWardIDChanging(value);
					this.SendPropertyChanging();
					this._WardID = value;
					this.SendPropertyChanged("WardID");
					this.OnWardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardName", DbType="NVarChar(50)")]
		public string WardName
		{
			get
			{
				return this._WardName;
			}
			set
			{
				if ((this._WardName != value))
				{
					this.OnWardNameChanging(value);
					this.SendPropertyChanging();
					this._WardName = value;
					this.SendPropertyChanged("WardName");
					this.OnWardNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRAvailablityInfo")]
	public partial class MSRAvailablityInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _StudentID;
		
		private int _StudentAvID;
		
		private System.Nullable<int> _MonthID;
		
		private System.Nullable<bool> _ifAvailable;
		
		private int _AvailbilityID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(System.Nullable<int> value);
    partial void OnStudentIDChanged();
    partial void OnStudentAvIDChanging(int value);
    partial void OnStudentAvIDChanged();
    partial void OnMonthIDChanging(System.Nullable<int> value);
    partial void OnMonthIDChanged();
    partial void OnifAvailableChanging(System.Nullable<bool> value);
    partial void OnifAvailableChanged();
    partial void OnAvailbilityIDChanging(int value);
    partial void OnAvailbilityIDChanged();
    #endregion
		
		public MSRAvailablityInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentAvID", DbType="Int NOT NULL")]
		public int StudentAvID
		{
			get
			{
				return this._StudentAvID;
			}
			set
			{
				if ((this._StudentAvID != value))
				{
					this.OnStudentAvIDChanging(value);
					this.SendPropertyChanging();
					this._StudentAvID = value;
					this.SendPropertyChanged("StudentAvID");
					this.OnStudentAvIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthID", DbType="Int")]
		public System.Nullable<int> MonthID
		{
			get
			{
				return this._MonthID;
			}
			set
			{
				if ((this._MonthID != value))
				{
					this.OnMonthIDChanging(value);
					this.SendPropertyChanging();
					this._MonthID = value;
					this.SendPropertyChanged("MonthID");
					this.OnMonthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ifAvailable", DbType="Bit")]
		public System.Nullable<bool> ifAvailable
		{
			get
			{
				return this._ifAvailable;
			}
			set
			{
				if ((this._ifAvailable != value))
				{
					this.OnifAvailableChanging(value);
					this.SendPropertyChanging();
					this._ifAvailable = value;
					this.SendPropertyChanged("ifAvailable");
					this.OnifAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailbilityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AvailbilityID
		{
			get
			{
				return this._AvailbilityID;
			}
			set
			{
				if ((this._AvailbilityID != value))
				{
					this.OnAvailbilityIDChanging(value);
					this.SendPropertyChanging();
					this._AvailbilityID = value;
					this.SendPropertyChanged("AvailbilityID");
					this.OnAvailbilityIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRDiscGroupInfo")]
	public partial class MSRDiscGroupInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscGroupID;
		
		private string _DiscGroupName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscGroupIDChanging(int value);
    partial void OnDiscGroupIDChanged();
    partial void OnDiscGroupNameChanging(string value);
    partial void OnDiscGroupNameChanged();
    #endregion
		
		public MSRDiscGroupInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscGroupID
		{
			get
			{
				return this._DiscGroupID;
			}
			set
			{
				if ((this._DiscGroupID != value))
				{
					this.OnDiscGroupIDChanging(value);
					this.SendPropertyChanging();
					this._DiscGroupID = value;
					this.SendPropertyChanged("DiscGroupID");
					this.OnDiscGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscGroupName", DbType="NVarChar(50)")]
		public string DiscGroupName
		{
			get
			{
				return this._DiscGroupName;
			}
			set
			{
				if ((this._DiscGroupName != value))
				{
					this.OnDiscGroupNameChanging(value);
					this.SendPropertyChanging();
					this._DiscGroupName = value;
					this.SendPropertyChanged("DiscGroupName");
					this.OnDiscGroupNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRDisciplineInfo")]
	public partial class MSRDisciplineInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DisciplineID;
		
		private string _DisciplineName;
		
		private System.Nullable<int> _DiscDurationPrID;
		
		private System.Nullable<int> _DisciplinePrecedenceID;
		
		private System.Nullable<int> _DisciplineOverseaReqID;
		
		private System.Nullable<int> _CourseCredit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisciplineIDChanging(int value);
    partial void OnDisciplineIDChanged();
    partial void OnDisciplineNameChanging(string value);
    partial void OnDisciplineNameChanged();
    partial void OnDiscDurationPrIDChanging(System.Nullable<int> value);
    partial void OnDiscDurationPrIDChanged();
    partial void OnDisciplinePrecedenceIDChanging(System.Nullable<int> value);
    partial void OnDisciplinePrecedenceIDChanged();
    partial void OnDisciplineOverseaReqIDChanging(System.Nullable<int> value);
    partial void OnDisciplineOverseaReqIDChanged();
    partial void OnCourseCreditChanging(System.Nullable<int> value);
    partial void OnCourseCreditChanged();
    #endregion
		
		public MSRDisciplineInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DisciplineID
		{
			get
			{
				return this._DisciplineID;
			}
			set
			{
				if ((this._DisciplineID != value))
				{
					this.OnDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineID = value;
					this.SendPropertyChanged("DisciplineID");
					this.OnDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineName", DbType="NVarChar(50)")]
		public string DisciplineName
		{
			get
			{
				return this._DisciplineName;
			}
			set
			{
				if ((this._DisciplineName != value))
				{
					this.OnDisciplineNameChanging(value);
					this.SendPropertyChanging();
					this._DisciplineName = value;
					this.SendPropertyChanged("DisciplineName");
					this.OnDisciplineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscDurationPrID", DbType="Int")]
		public System.Nullable<int> DiscDurationPrID
		{
			get
			{
				return this._DiscDurationPrID;
			}
			set
			{
				if ((this._DiscDurationPrID != value))
				{
					this.OnDiscDurationPrIDChanging(value);
					this.SendPropertyChanging();
					this._DiscDurationPrID = value;
					this.SendPropertyChanged("DiscDurationPrID");
					this.OnDiscDurationPrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplinePrecedenceID", DbType="Int")]
		public System.Nullable<int> DisciplinePrecedenceID
		{
			get
			{
				return this._DisciplinePrecedenceID;
			}
			set
			{
				if ((this._DisciplinePrecedenceID != value))
				{
					this.OnDisciplinePrecedenceIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplinePrecedenceID = value;
					this.SendPropertyChanged("DisciplinePrecedenceID");
					this.OnDisciplinePrecedenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineOverseaReqID", DbType="Int")]
		public System.Nullable<int> DisciplineOverseaReqID
		{
			get
			{
				return this._DisciplineOverseaReqID;
			}
			set
			{
				if ((this._DisciplineOverseaReqID != value))
				{
					this.OnDisciplineOverseaReqIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineOverseaReqID = value;
					this.SendPropertyChanged("DisciplineOverseaReqID");
					this.OnDisciplineOverseaReqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCredit", DbType="Int")]
		public System.Nullable<int> CourseCredit
		{
			get
			{
				return this._CourseCredit;
			}
			set
			{
				if ((this._CourseCredit != value))
				{
					this.OnCourseCreditChanging(value);
					this.SendPropertyChanging();
					this._CourseCredit = value;
					this.SendPropertyChanged("CourseCredit");
					this.OnCourseCreditChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRDisciplineListInfo")]
	public partial class MSRDisciplineListInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscListID;
		
		private System.Nullable<int> _ListID;
		
		private System.Nullable<int> _DisciplineID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscListIDChanging(int value);
    partial void OnDiscListIDChanged();
    partial void OnListIDChanging(System.Nullable<int> value);
    partial void OnListIDChanged();
    partial void OnDisciplineIDChanging(System.Nullable<int> value);
    partial void OnDisciplineIDChanged();
    #endregion
		
		public MSRDisciplineListInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscListID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscListID
		{
			get
			{
				return this._DiscListID;
			}
			set
			{
				if ((this._DiscListID != value))
				{
					this.OnDiscListIDChanging(value);
					this.SendPropertyChanging();
					this._DiscListID = value;
					this.SendPropertyChanged("DiscListID");
					this.OnDiscListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="Int")]
		public System.Nullable<int> ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this.OnListIDChanging(value);
					this.SendPropertyChanging();
					this._ListID = value;
					this.SendPropertyChanged("ListID");
					this.OnListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineID", DbType="Int")]
		public System.Nullable<int> DisciplineID
		{
			get
			{
				return this._DisciplineID;
			}
			set
			{
				if ((this._DisciplineID != value))
				{
					this.OnDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineID = value;
					this.SendPropertyChanged("DisciplineID");
					this.OnDisciplineIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRDisciplinePrecedenceInfo")]
	public partial class MSRDisciplinePrecedenceInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DisciplinePrecedenceID;
		
		private System.Nullable<int> _DisciplineID;
		
		private System.Nullable<int> _PrecedenceDiscID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisciplinePrecedenceIDChanging(int value);
    partial void OnDisciplinePrecedenceIDChanged();
    partial void OnDisciplineIDChanging(System.Nullable<int> value);
    partial void OnDisciplineIDChanged();
    partial void OnPrecedenceDiscIDChanging(System.Nullable<int> value);
    partial void OnPrecedenceDiscIDChanged();
    #endregion
		
		public MSRDisciplinePrecedenceInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplinePrecedenceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DisciplinePrecedenceID
		{
			get
			{
				return this._DisciplinePrecedenceID;
			}
			set
			{
				if ((this._DisciplinePrecedenceID != value))
				{
					this.OnDisciplinePrecedenceIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplinePrecedenceID = value;
					this.SendPropertyChanged("DisciplinePrecedenceID");
					this.OnDisciplinePrecedenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineID", DbType="Int")]
		public System.Nullable<int> DisciplineID
		{
			get
			{
				return this._DisciplineID;
			}
			set
			{
				if ((this._DisciplineID != value))
				{
					this.OnDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineID = value;
					this.SendPropertyChanged("DisciplineID");
					this.OnDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecedenceDiscID", DbType="Int")]
		public System.Nullable<int> PrecedenceDiscID
		{
			get
			{
				return this._PrecedenceDiscID;
			}
			set
			{
				if ((this._PrecedenceDiscID != value))
				{
					this.OnPrecedenceDiscIDChanging(value);
					this.SendPropertyChanging();
					this._PrecedenceDiscID = value;
					this.SendPropertyChanged("PrecedenceDiscID");
					this.OnPrecedenceDiscIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRHospitalInfo")]
	public partial class MSRHospitalInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HospitalID;
		
		private string _HospitalName;
		
		private System.Nullable<int> _HospitalRegionID;
		
		private System.Nullable<int> _HospitalWardDemandID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHospitalIDChanging(int value);
    partial void OnHospitalIDChanged();
    partial void OnHospitalNameChanging(string value);
    partial void OnHospitalNameChanged();
    partial void OnHospitalRegionIDChanging(System.Nullable<int> value);
    partial void OnHospitalRegionIDChanged();
    partial void OnHospitalWardDemandIDChanging(System.Nullable<int> value);
    partial void OnHospitalWardDemandIDChanged();
    #endregion
		
		public MSRHospitalInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					this.OnHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalID = value;
					this.SendPropertyChanged("HospitalID");
					this.OnHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalName", DbType="NVarChar(50)")]
		public string HospitalName
		{
			get
			{
				return this._HospitalName;
			}
			set
			{
				if ((this._HospitalName != value))
				{
					this.OnHospitalNameChanging(value);
					this.SendPropertyChanging();
					this._HospitalName = value;
					this.SendPropertyChanged("HospitalName");
					this.OnHospitalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalRegionID", DbType="Int")]
		public System.Nullable<int> HospitalRegionID
		{
			get
			{
				return this._HospitalRegionID;
			}
			set
			{
				if ((this._HospitalRegionID != value))
				{
					this.OnHospitalRegionIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalRegionID = value;
					this.SendPropertyChanged("HospitalRegionID");
					this.OnHospitalRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalWardDemandID", DbType="Int")]
		public System.Nullable<int> HospitalWardDemandID
		{
			get
			{
				return this._HospitalWardDemandID;
			}
			set
			{
				if ((this._HospitalWardDemandID != value))
				{
					this.OnHospitalWardDemandIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalWardDemandID = value;
					this.SendPropertyChanged("HospitalWardDemandID");
					this.OnHospitalWardDemandIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRHospitalWardDemandInfo")]
	public partial class MSRHospitalWardDemandInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _WardID;
		
		private System.Nullable<int> _HospitalID;
		
		private System.Nullable<int> _MonthID;
		
		private System.Nullable<int> _EmrDemand;
		
		private System.Nullable<int> _ResDemand;
		
		private System.Nullable<int> _MaxDemand;
		
		private System.Nullable<int> _MinDemand;
		
		private int _WardDemandID;
		
		private System.Nullable<int> _HospitalDemandID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWardIDChanging(System.Nullable<int> value);
    partial void OnWardIDChanged();
    partial void OnHospitalIDChanging(System.Nullable<int> value);
    partial void OnHospitalIDChanged();
    partial void OnMonthIDChanging(System.Nullable<int> value);
    partial void OnMonthIDChanged();
    partial void OnEmrDemandChanging(System.Nullable<int> value);
    partial void OnEmrDemandChanged();
    partial void OnResDemandChanging(System.Nullable<int> value);
    partial void OnResDemandChanged();
    partial void OnMaxDemandChanging(System.Nullable<int> value);
    partial void OnMaxDemandChanged();
    partial void OnMinDemandChanging(System.Nullable<int> value);
    partial void OnMinDemandChanged();
    partial void OnWardDemandIDChanging(int value);
    partial void OnWardDemandIDChanged();
    partial void OnHospitalDemandIDChanging(System.Nullable<int> value);
    partial void OnHospitalDemandIDChanged();
    #endregion
		
		public MSRHospitalWardDemandInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardID", DbType="Int")]
		public System.Nullable<int> WardID
		{
			get
			{
				return this._WardID;
			}
			set
			{
				if ((this._WardID != value))
				{
					this.OnWardIDChanging(value);
					this.SendPropertyChanging();
					this._WardID = value;
					this.SendPropertyChanged("WardID");
					this.OnWardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", DbType="Int")]
		public System.Nullable<int> HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					this.OnHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalID = value;
					this.SendPropertyChanged("HospitalID");
					this.OnHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthID", DbType="Int")]
		public System.Nullable<int> MonthID
		{
			get
			{
				return this._MonthID;
			}
			set
			{
				if ((this._MonthID != value))
				{
					this.OnMonthIDChanging(value);
					this.SendPropertyChanging();
					this._MonthID = value;
					this.SendPropertyChanged("MonthID");
					this.OnMonthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmrDemand", DbType="Int")]
		public System.Nullable<int> EmrDemand
		{
			get
			{
				return this._EmrDemand;
			}
			set
			{
				if ((this._EmrDemand != value))
				{
					this.OnEmrDemandChanging(value);
					this.SendPropertyChanging();
					this._EmrDemand = value;
					this.SendPropertyChanged("EmrDemand");
					this.OnEmrDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResDemand", DbType="Int")]
		public System.Nullable<int> ResDemand
		{
			get
			{
				return this._ResDemand;
			}
			set
			{
				if ((this._ResDemand != value))
				{
					this.OnResDemandChanging(value);
					this.SendPropertyChanging();
					this._ResDemand = value;
					this.SendPropertyChanged("ResDemand");
					this.OnResDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDemand", DbType="Int")]
		public System.Nullable<int> MaxDemand
		{
			get
			{
				return this._MaxDemand;
			}
			set
			{
				if ((this._MaxDemand != value))
				{
					this.OnMaxDemandChanging(value);
					this.SendPropertyChanging();
					this._MaxDemand = value;
					this.SendPropertyChanged("MaxDemand");
					this.OnMaxDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinDemand", DbType="Int")]
		public System.Nullable<int> MinDemand
		{
			get
			{
				return this._MinDemand;
			}
			set
			{
				if ((this._MinDemand != value))
				{
					this.OnMinDemandChanging(value);
					this.SendPropertyChanging();
					this._MinDemand = value;
					this.SendPropertyChanged("MinDemand");
					this.OnMinDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardDemandID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WardDemandID
		{
			get
			{
				return this._WardDemandID;
			}
			set
			{
				if ((this._WardDemandID != value))
				{
					this.OnWardDemandIDChanging(value);
					this.SendPropertyChanging();
					this._WardDemandID = value;
					this.SendPropertyChanged("WardDemandID");
					this.OnWardDemandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalDemandID", DbType="Int")]
		public System.Nullable<int> HospitalDemandID
		{
			get
			{
				return this._HospitalDemandID;
			}
			set
			{
				if ((this._HospitalDemandID != value))
				{
					this.OnHospitalDemandIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalDemandID = value;
					this.SendPropertyChanged("HospitalDemandID");
					this.OnHospitalDemandIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRListInfo")]
	public partial class MSRListInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ListID;
		
		private string _ListName;
		
		private System.Nullable<int> _DiscGroupID;
		
		private System.Nullable<int> _InternID;
		
		private System.Nullable<int> _Kperform;
		
		private System.Nullable<int> _DiscListID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnListIDChanging(int value);
    partial void OnListIDChanged();
    partial void OnListNameChanging(string value);
    partial void OnListNameChanged();
    partial void OnDiscGroupIDChanging(System.Nullable<int> value);
    partial void OnDiscGroupIDChanged();
    partial void OnInternIDChanging(System.Nullable<int> value);
    partial void OnInternIDChanged();
    partial void OnKperformChanging(System.Nullable<int> value);
    partial void OnKperformChanged();
    partial void OnDiscListIDChanging(System.Nullable<int> value);
    partial void OnDiscListIDChanged();
    #endregion
		
		public MSRListInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this.OnListIDChanging(value);
					this.SendPropertyChanging();
					this._ListID = value;
					this.SendPropertyChanged("ListID");
					this.OnListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListName", DbType="NVarChar(50)")]
		public string ListName
		{
			get
			{
				return this._ListName;
			}
			set
			{
				if ((this._ListName != value))
				{
					this.OnListNameChanging(value);
					this.SendPropertyChanging();
					this._ListName = value;
					this.SendPropertyChanged("ListName");
					this.OnListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscGroupID", DbType="Int")]
		public System.Nullable<int> DiscGroupID
		{
			get
			{
				return this._DiscGroupID;
			}
			set
			{
				if ((this._DiscGroupID != value))
				{
					this.OnDiscGroupIDChanging(value);
					this.SendPropertyChanging();
					this._DiscGroupID = value;
					this.SendPropertyChanged("DiscGroupID");
					this.OnDiscGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternID", DbType="Int")]
		public System.Nullable<int> InternID
		{
			get
			{
				return this._InternID;
			}
			set
			{
				if ((this._InternID != value))
				{
					this.OnInternIDChanging(value);
					this.SendPropertyChanging();
					this._InternID = value;
					this.SendPropertyChanged("InternID");
					this.OnInternIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kperform", DbType="Int")]
		public System.Nullable<int> Kperform
		{
			get
			{
				return this._Kperform;
			}
			set
			{
				if ((this._Kperform != value))
				{
					this.OnKperformChanging(value);
					this.SendPropertyChanging();
					this._Kperform = value;
					this.SendPropertyChanged("Kperform");
					this.OnKperformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscListID", DbType="Int")]
		public System.Nullable<int> DiscListID
		{
			get
			{
				return this._DiscListID;
			}
			set
			{
				if ((this._DiscListID != value))
				{
					this.OnDiscListIDChanging(value);
					this.SendPropertyChanging();
					this._DiscListID = value;
					this.SendPropertyChanged("DiscListID");
					this.OnDiscListIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSROverseaInfo")]
	public partial class MSROverseaInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _StudentID;
		
		private System.Nullable<int> _DisciplineID;
		
		private System.Nullable<int> _MonthID;
		
		private int _OverseaID;
		
		private System.Nullable<int> _StudentOverseaID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(System.Nullable<int> value);
    partial void OnStudentIDChanged();
    partial void OnDisciplineIDChanging(System.Nullable<int> value);
    partial void OnDisciplineIDChanged();
    partial void OnMonthIDChanging(System.Nullable<int> value);
    partial void OnMonthIDChanged();
    partial void OnOverseaIDChanging(int value);
    partial void OnOverseaIDChanged();
    partial void OnStudentOverseaIDChanging(System.Nullable<int> value);
    partial void OnStudentOverseaIDChanged();
    #endregion
		
		public MSROverseaInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineID", DbType="Int")]
		public System.Nullable<int> DisciplineID
		{
			get
			{
				return this._DisciplineID;
			}
			set
			{
				if ((this._DisciplineID != value))
				{
					this.OnDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineID = value;
					this.SendPropertyChanged("DisciplineID");
					this.OnDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthID", DbType="Int")]
		public System.Nullable<int> MonthID
		{
			get
			{
				return this._MonthID;
			}
			set
			{
				if ((this._MonthID != value))
				{
					this.OnMonthIDChanging(value);
					this.SendPropertyChanging();
					this._MonthID = value;
					this.SendPropertyChanged("MonthID");
					this.OnMonthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverseaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OverseaID
		{
			get
			{
				return this._OverseaID;
			}
			set
			{
				if ((this._OverseaID != value))
				{
					this.OnOverseaIDChanging(value);
					this.SendPropertyChanging();
					this._OverseaID = value;
					this.SendPropertyChanged("OverseaID");
					this.OnOverseaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentOverseaID", DbType="Int")]
		public System.Nullable<int> StudentOverseaID
		{
			get
			{
				return this._StudentOverseaID;
			}
			set
			{
				if ((this._StudentOverseaID != value))
				{
					this.OnStudentOverseaIDChanging(value);
					this.SendPropertyChanging();
					this._StudentOverseaID = value;
					this.SendPropertyChanged("StudentOverseaID");
					this.OnStudentOverseaIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSROverseaRequestInfo")]
	public partial class MSROverseaRequestInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _DisciplineID;
		
		private int _RequestID;
		
		private System.Nullable<int> _TrainingPrID;
		
		private System.Nullable<int> _OverseaReqID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisciplineIDChanging(System.Nullable<int> value);
    partial void OnDisciplineIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnTrainingPrIDChanging(System.Nullable<int> value);
    partial void OnTrainingPrIDChanged();
    partial void OnOverseaReqIDChanging(System.Nullable<int> value);
    partial void OnOverseaReqIDChanged();
    #endregion
		
		public MSROverseaRequestInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineID", DbType="Int")]
		public System.Nullable<int> DisciplineID
		{
			get
			{
				return this._DisciplineID;
			}
			set
			{
				if ((this._DisciplineID != value))
				{
					this.OnDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineID = value;
					this.SendPropertyChanged("DisciplineID");
					this.OnDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingPrID", DbType="Int")]
		public System.Nullable<int> TrainingPrID
		{
			get
			{
				return this._TrainingPrID;
			}
			set
			{
				if ((this._TrainingPrID != value))
				{
					this.OnTrainingPrIDChanging(value);
					this.SendPropertyChanging();
					this._TrainingPrID = value;
					this.SendPropertyChanged("TrainingPrID");
					this.OnTrainingPrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverseaReqID", DbType="Int")]
		public System.Nullable<int> OverseaReqID
		{
			get
			{
				return this._OverseaReqID;
			}
			set
			{
				if ((this._OverseaReqID != value))
				{
					this.OnOverseaReqIDChanging(value);
					this.SendPropertyChanging();
					this._OverseaReqID = value;
					this.SendPropertyChanged("OverseaReqID");
					this.OnOverseaReqIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRProblemSettingInfo")]
	public partial class MSRProblemSettingInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProblemSettingID;
		
		private System.Nullable<int> _TimeSlotPerMonth;
		
		private string _TimeSlotName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProblemSettingIDChanging(int value);
    partial void OnProblemSettingIDChanged();
    partial void OnTimeSlotPerMonthChanging(System.Nullable<int> value);
    partial void OnTimeSlotPerMonthChanged();
    partial void OnTimeSlotNameChanging(string value);
    partial void OnTimeSlotNameChanged();
    #endregion
		
		public MSRProblemSettingInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemSettingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProblemSettingID
		{
			get
			{
				return this._ProblemSettingID;
			}
			set
			{
				if ((this._ProblemSettingID != value))
				{
					this.OnProblemSettingIDChanging(value);
					this.SendPropertyChanging();
					this._ProblemSettingID = value;
					this.SendPropertyChanged("ProblemSettingID");
					this.OnProblemSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSlotPerMonth", DbType="Int")]
		public System.Nullable<int> TimeSlotPerMonth
		{
			get
			{
				return this._TimeSlotPerMonth;
			}
			set
			{
				if ((this._TimeSlotPerMonth != value))
				{
					this.OnTimeSlotPerMonthChanging(value);
					this.SendPropertyChanging();
					this._TimeSlotPerMonth = value;
					this.SendPropertyChanged("TimeSlotPerMonth");
					this.OnTimeSlotPerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSlotName", DbType="NVarChar(50)")]
		public string TimeSlotName
		{
			get
			{
				return this._TimeSlotName;
			}
			set
			{
				if ((this._TimeSlotName != value))
				{
					this.OnTimeSlotNameChanging(value);
					this.SendPropertyChanging();
					this._TimeSlotName = value;
					this.SendPropertyChanged("TimeSlotName");
					this.OnTimeSlotNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRProgramDiscPrfInfo")]
	public partial class MSRProgramDiscPrfInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _TrProgramID;
		
		private System.Nullable<int> _DisciplineID;
		
		private int _ProgramDisciplineID;
		
		private System.Nullable<int> _ProgramDiscPrfID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrProgramIDChanging(System.Nullable<int> value);
    partial void OnTrProgramIDChanged();
    partial void OnDisciplineIDChanging(System.Nullable<int> value);
    partial void OnDisciplineIDChanged();
    partial void OnProgramDisciplineIDChanging(int value);
    partial void OnProgramDisciplineIDChanged();
    partial void OnProgramDiscPrfIDChanging(System.Nullable<int> value);
    partial void OnProgramDiscPrfIDChanged();
    #endregion
		
		public MSRProgramDiscPrfInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrProgramID", DbType="Int")]
		public System.Nullable<int> TrProgramID
		{
			get
			{
				return this._TrProgramID;
			}
			set
			{
				if ((this._TrProgramID != value))
				{
					this.OnTrProgramIDChanging(value);
					this.SendPropertyChanging();
					this._TrProgramID = value;
					this.SendPropertyChanged("TrProgramID");
					this.OnTrProgramIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineID", DbType="Int")]
		public System.Nullable<int> DisciplineID
		{
			get
			{
				return this._DisciplineID;
			}
			set
			{
				if ((this._DisciplineID != value))
				{
					this.OnDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineID = value;
					this.SendPropertyChanged("DisciplineID");
					this.OnDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramDisciplineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProgramDisciplineID
		{
			get
			{
				return this._ProgramDisciplineID;
			}
			set
			{
				if ((this._ProgramDisciplineID != value))
				{
					this.OnProgramDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._ProgramDisciplineID = value;
					this.SendPropertyChanged("ProgramDisciplineID");
					this.OnProgramDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramDiscPrfID", DbType="Int")]
		public System.Nullable<int> ProgramDiscPrfID
		{
			get
			{
				return this._ProgramDiscPrfID;
			}
			set
			{
				if ((this._ProgramDiscPrfID != value))
				{
					this.OnProgramDiscPrfIDChanging(value);
					this.SendPropertyChanging();
					this._ProgramDiscPrfID = value;
					this.SendPropertyChanged("ProgramDiscPrfID");
					this.OnProgramDiscPrfIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRRegionInfo")]
	public partial class MSRRegionInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegionID;
		
		private string _RegionName;
		
		private System.Nullable<int> _AccomodationCap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnRegionNameChanging(string value);
    partial void OnRegionNameChanged();
    partial void OnAccomodationCapChanging(System.Nullable<int> value);
    partial void OnAccomodationCapChanged();
    #endregion
		
		public MSRRegionInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this.OnRegionNameChanging(value);
					this.SendPropertyChanging();
					this._RegionName = value;
					this.SendPropertyChanged("RegionName");
					this.OnRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomodationCap", DbType="Int")]
		public System.Nullable<int> AccomodationCap
		{
			get
			{
				return this._AccomodationCap;
			}
			set
			{
				if ((this._AccomodationCap != value))
				{
					this.OnAccomodationCapChanging(value);
					this.SendPropertyChanging();
					this._AccomodationCap = value;
					this.SendPropertyChanged("AccomodationCap");
					this.OnAccomodationCapChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRStudentDiscPrfInfo")]
	public partial class MSRStudentDiscPrfInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _StudentID;
		
		private System.Nullable<int> _DisciplineID;
		
		private int _StudentDisciplineID;
		
		private System.Nullable<int> _StudentDiscPrfID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(System.Nullable<int> value);
    partial void OnStudentIDChanged();
    partial void OnDisciplineIDChanging(System.Nullable<int> value);
    partial void OnDisciplineIDChanged();
    partial void OnStudentDisciplineIDChanging(int value);
    partial void OnStudentDisciplineIDChanged();
    partial void OnStudentDiscPrfIDChanging(System.Nullable<int> value);
    partial void OnStudentDiscPrfIDChanged();
    #endregion
		
		public MSRStudentDiscPrfInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineID", DbType="Int")]
		public System.Nullable<int> DisciplineID
		{
			get
			{
				return this._DisciplineID;
			}
			set
			{
				if ((this._DisciplineID != value))
				{
					this.OnDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineID = value;
					this.SendPropertyChanged("DisciplineID");
					this.OnDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentDisciplineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentDisciplineID
		{
			get
			{
				return this._StudentDisciplineID;
			}
			set
			{
				if ((this._StudentDisciplineID != value))
				{
					this.OnStudentDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._StudentDisciplineID = value;
					this.SendPropertyChanged("StudentDisciplineID");
					this.OnStudentDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentDiscPrfID", DbType="Int")]
		public System.Nullable<int> StudentDiscPrfID
		{
			get
			{
				return this._StudentDiscPrfID;
			}
			set
			{
				if ((this._StudentDiscPrfID != value))
				{
					this.OnStudentDiscPrfIDChanging(value);
					this.SendPropertyChanging();
					this._StudentDiscPrfID = value;
					this.SendPropertyChanged("StudentDiscPrfID");
					this.OnStudentDiscPrfIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRStudentFulfilledDiscInfo")]
	public partial class MSRStudentFulfilledDiscInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _StudentID;
		
		private int _FulfilledID;
		
		private System.Nullable<int> _DisciplineID;
		
		private System.Nullable<int> _HospitalID;
		
		private System.Nullable<int> _TrainingProgramID;
		
		private System.Nullable<int> _StudentHistoryID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(System.Nullable<int> value);
    partial void OnStudentIDChanged();
    partial void OnFulfilledIDChanging(int value);
    partial void OnFulfilledIDChanged();
    partial void OnDisciplineIDChanging(System.Nullable<int> value);
    partial void OnDisciplineIDChanged();
    partial void OnHospitalIDChanging(System.Nullable<int> value);
    partial void OnHospitalIDChanged();
    partial void OnTrainingProgramIDChanging(System.Nullable<int> value);
    partial void OnTrainingProgramIDChanged();
    partial void OnStudentHistoryIDChanging(System.Nullable<int> value);
    partial void OnStudentHistoryIDChanged();
    #endregion
		
		public MSRStudentFulfilledDiscInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FulfilledID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FulfilledID
		{
			get
			{
				return this._FulfilledID;
			}
			set
			{
				if ((this._FulfilledID != value))
				{
					this.OnFulfilledIDChanging(value);
					this.SendPropertyChanging();
					this._FulfilledID = value;
					this.SendPropertyChanged("FulfilledID");
					this.OnFulfilledIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineID", DbType="Int")]
		public System.Nullable<int> DisciplineID
		{
			get
			{
				return this._DisciplineID;
			}
			set
			{
				if ((this._DisciplineID != value))
				{
					this.OnDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineID = value;
					this.SendPropertyChanged("DisciplineID");
					this.OnDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", DbType="Int")]
		public System.Nullable<int> HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					this.OnHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalID = value;
					this.SendPropertyChanged("HospitalID");
					this.OnHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingProgramID", DbType="Int")]
		public System.Nullable<int> TrainingProgramID
		{
			get
			{
				return this._TrainingProgramID;
			}
			set
			{
				if ((this._TrainingProgramID != value))
				{
					this.OnTrainingProgramIDChanging(value);
					this.SendPropertyChanging();
					this._TrainingProgramID = value;
					this.SendPropertyChanged("TrainingProgramID");
					this.OnTrainingProgramIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentHistoryID", DbType="Int")]
		public System.Nullable<int> StudentHistoryID
		{
			get
			{
				return this._StudentHistoryID;
			}
			set
			{
				if ((this._StudentHistoryID != value))
				{
					this.OnStudentHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._StudentHistoryID = value;
					this.SendPropertyChanged("StudentHistoryID");
					this.OnStudentHistoryIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRStudentHospPrfInfo")]
	public partial class MSRStudentHospPrfInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _HospitalID;
		
		private System.Nullable<int> _StudentID;
		
		private int _StudentHospitalID;
		
		private System.Nullable<int> _StudentHospPrfID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHospitalIDChanging(System.Nullable<int> value);
    partial void OnHospitalIDChanged();
    partial void OnStudentIDChanging(System.Nullable<int> value);
    partial void OnStudentIDChanged();
    partial void OnStudentHospitalIDChanging(int value);
    partial void OnStudentHospitalIDChanged();
    partial void OnStudentHospPrfIDChanging(System.Nullable<int> value);
    partial void OnStudentHospPrfIDChanged();
    #endregion
		
		public MSRStudentHospPrfInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", DbType="Int")]
		public System.Nullable<int> HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					this.OnHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalID = value;
					this.SendPropertyChanged("HospitalID");
					this.OnHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentHospitalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentHospitalID
		{
			get
			{
				return this._StudentHospitalID;
			}
			set
			{
				if ((this._StudentHospitalID != value))
				{
					this.OnStudentHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._StudentHospitalID = value;
					this.SendPropertyChanged("StudentHospitalID");
					this.OnStudentHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentHospPrfID", DbType="Int")]
		public System.Nullable<int> StudentHospPrfID
		{
			get
			{
				return this._StudentHospPrfID;
			}
			set
			{
				if ((this._StudentHospPrfID != value))
				{
					this.OnStudentHospPrfIDChanging(value);
					this.SendPropertyChanging();
					this._StudentHospPrfID = value;
					this.SendPropertyChanged("StudentHospPrfID");
					this.OnStudentHospPrfIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRStudentInfo")]
	public partial class MSRStudentInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentSQLID;
		
		private string _StudentID;
		
		private string _StudentName;
		
		private System.Nullable<int> _StudentAveID;
		
		private System.Nullable<int> _StudentAbID;
		
		private System.Nullable<int> _StudentFulfilledID;
		
		private System.Nullable<int> _StudentOverseaReqID;
		
		private System.Nullable<bool> _IfPrespective;
		
		private System.Nullable<bool> _IfTransferBru;
		
		private System.Nullable<int> _DisciplinePrfID;
		
		private System.Nullable<int> _HospitalPrfID;
		
		private System.Nullable<int> _WeightDiscPrf;
		
		private System.Nullable<int> _WeightHospPrf;
		
		private System.Nullable<int> _WeightWait;
		
		private System.Nullable<int> _WeightChange;
		
		private System.Nullable<int> _DisciplineListID;
		
		private System.Nullable<int> _TrainingProgramID;
		
		private System.Nullable<int> _TransferedRegionID;
		
		private System.Nullable<int> _RegionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentSQLIDChanging(int value);
    partial void OnStudentSQLIDChanged();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnStudentAveIDChanging(System.Nullable<int> value);
    partial void OnStudentAveIDChanged();
    partial void OnStudentAbIDChanging(System.Nullable<int> value);
    partial void OnStudentAbIDChanged();
    partial void OnStudentFulfilledIDChanging(System.Nullable<int> value);
    partial void OnStudentFulfilledIDChanged();
    partial void OnStudentOverseaReqIDChanging(System.Nullable<int> value);
    partial void OnStudentOverseaReqIDChanged();
    partial void OnIfPrespectiveChanging(System.Nullable<bool> value);
    partial void OnIfPrespectiveChanged();
    partial void OnIfTransferBruChanging(System.Nullable<bool> value);
    partial void OnIfTransferBruChanged();
    partial void OnDisciplinePrfIDChanging(System.Nullable<int> value);
    partial void OnDisciplinePrfIDChanged();
    partial void OnHospitalPrfIDChanging(System.Nullable<int> value);
    partial void OnHospitalPrfIDChanged();
    partial void OnWeightDiscPrfChanging(System.Nullable<int> value);
    partial void OnWeightDiscPrfChanged();
    partial void OnWeightHospPrfChanging(System.Nullable<int> value);
    partial void OnWeightHospPrfChanged();
    partial void OnWeightWaitChanging(System.Nullable<int> value);
    partial void OnWeightWaitChanged();
    partial void OnWeightChangeChanging(System.Nullable<int> value);
    partial void OnWeightChangeChanged();
    partial void OnDisciplineListIDChanging(System.Nullable<int> value);
    partial void OnDisciplineListIDChanged();
    partial void OnTrainingProgramIDChanging(System.Nullable<int> value);
    partial void OnTrainingProgramIDChanged();
    partial void OnTransferedRegionIDChanging(System.Nullable<int> value);
    partial void OnTransferedRegionIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    #endregion
		
		public MSRStudentInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentSQLID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentSQLID
		{
			get
			{
				return this._StudentSQLID;
			}
			set
			{
				if ((this._StudentSQLID != value))
				{
					this.OnStudentSQLIDChanging(value);
					this.SendPropertyChanging();
					this._StudentSQLID = value;
					this.SendPropertyChanged("StudentSQLID");
					this.OnStudentSQLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="NVarChar(50)")]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(50)")]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this.OnStudentNameChanging(value);
					this.SendPropertyChanging();
					this._StudentName = value;
					this.SendPropertyChanged("StudentName");
					this.OnStudentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentAveID", DbType="Int")]
		public System.Nullable<int> StudentAveID
		{
			get
			{
				return this._StudentAveID;
			}
			set
			{
				if ((this._StudentAveID != value))
				{
					this.OnStudentAveIDChanging(value);
					this.SendPropertyChanging();
					this._StudentAveID = value;
					this.SendPropertyChanged("StudentAveID");
					this.OnStudentAveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentAbID", DbType="Int")]
		public System.Nullable<int> StudentAbID
		{
			get
			{
				return this._StudentAbID;
			}
			set
			{
				if ((this._StudentAbID != value))
				{
					this.OnStudentAbIDChanging(value);
					this.SendPropertyChanging();
					this._StudentAbID = value;
					this.SendPropertyChanged("StudentAbID");
					this.OnStudentAbIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentFulfilledID", DbType="Int")]
		public System.Nullable<int> StudentFulfilledID
		{
			get
			{
				return this._StudentFulfilledID;
			}
			set
			{
				if ((this._StudentFulfilledID != value))
				{
					this.OnStudentFulfilledIDChanging(value);
					this.SendPropertyChanging();
					this._StudentFulfilledID = value;
					this.SendPropertyChanged("StudentFulfilledID");
					this.OnStudentFulfilledIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentOverseaReqID", DbType="Int")]
		public System.Nullable<int> StudentOverseaReqID
		{
			get
			{
				return this._StudentOverseaReqID;
			}
			set
			{
				if ((this._StudentOverseaReqID != value))
				{
					this.OnStudentOverseaReqIDChanging(value);
					this.SendPropertyChanging();
					this._StudentOverseaReqID = value;
					this.SendPropertyChanged("StudentOverseaReqID");
					this.OnStudentOverseaReqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IfPrespective", DbType="Bit")]
		public System.Nullable<bool> IfPrespective
		{
			get
			{
				return this._IfPrespective;
			}
			set
			{
				if ((this._IfPrespective != value))
				{
					this.OnIfPrespectiveChanging(value);
					this.SendPropertyChanging();
					this._IfPrespective = value;
					this.SendPropertyChanged("IfPrespective");
					this.OnIfPrespectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IfTransferBru", DbType="Bit")]
		public System.Nullable<bool> IfTransferBru
		{
			get
			{
				return this._IfTransferBru;
			}
			set
			{
				if ((this._IfTransferBru != value))
				{
					this.OnIfTransferBruChanging(value);
					this.SendPropertyChanging();
					this._IfTransferBru = value;
					this.SendPropertyChanged("IfTransferBru");
					this.OnIfTransferBruChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplinePrfID", DbType="Int")]
		public System.Nullable<int> DisciplinePrfID
		{
			get
			{
				return this._DisciplinePrfID;
			}
			set
			{
				if ((this._DisciplinePrfID != value))
				{
					this.OnDisciplinePrfIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplinePrfID = value;
					this.SendPropertyChanged("DisciplinePrfID");
					this.OnDisciplinePrfIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalPrfID", DbType="Int")]
		public System.Nullable<int> HospitalPrfID
		{
			get
			{
				return this._HospitalPrfID;
			}
			set
			{
				if ((this._HospitalPrfID != value))
				{
					this.OnHospitalPrfIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalPrfID = value;
					this.SendPropertyChanged("HospitalPrfID");
					this.OnHospitalPrfIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightDiscPrf", DbType="Int")]
		public System.Nullable<int> WeightDiscPrf
		{
			get
			{
				return this._WeightDiscPrf;
			}
			set
			{
				if ((this._WeightDiscPrf != value))
				{
					this.OnWeightDiscPrfChanging(value);
					this.SendPropertyChanging();
					this._WeightDiscPrf = value;
					this.SendPropertyChanged("WeightDiscPrf");
					this.OnWeightDiscPrfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightHospPrf", DbType="Int")]
		public System.Nullable<int> WeightHospPrf
		{
			get
			{
				return this._WeightHospPrf;
			}
			set
			{
				if ((this._WeightHospPrf != value))
				{
					this.OnWeightHospPrfChanging(value);
					this.SendPropertyChanging();
					this._WeightHospPrf = value;
					this.SendPropertyChanged("WeightHospPrf");
					this.OnWeightHospPrfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightWait", DbType="Int")]
		public System.Nullable<int> WeightWait
		{
			get
			{
				return this._WeightWait;
			}
			set
			{
				if ((this._WeightWait != value))
				{
					this.OnWeightWaitChanging(value);
					this.SendPropertyChanging();
					this._WeightWait = value;
					this.SendPropertyChanged("WeightWait");
					this.OnWeightWaitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightChange", DbType="Int")]
		public System.Nullable<int> WeightChange
		{
			get
			{
				return this._WeightChange;
			}
			set
			{
				if ((this._WeightChange != value))
				{
					this.OnWeightChangeChanging(value);
					this.SendPropertyChanging();
					this._WeightChange = value;
					this.SendPropertyChanged("WeightChange");
					this.OnWeightChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineListID", DbType="Int")]
		public System.Nullable<int> DisciplineListID
		{
			get
			{
				return this._DisciplineListID;
			}
			set
			{
				if ((this._DisciplineListID != value))
				{
					this.OnDisciplineListIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineListID = value;
					this.SendPropertyChanged("DisciplineListID");
					this.OnDisciplineListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingProgramID", DbType="Int")]
		public System.Nullable<int> TrainingProgramID
		{
			get
			{
				return this._TrainingProgramID;
			}
			set
			{
				if ((this._TrainingProgramID != value))
				{
					this.OnTrainingProgramIDChanging(value);
					this.SendPropertyChanging();
					this._TrainingProgramID = value;
					this.SendPropertyChanged("TrainingProgramID");
					this.OnTrainingProgramIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferedRegionID", DbType="Int")]
		public System.Nullable<int> TransferedRegionID
		{
			get
			{
				return this._TransferedRegionID;
			}
			set
			{
				if ((this._TransferedRegionID != value))
				{
					this.OnTransferedRegionIDChanging(value);
					this.SendPropertyChanging();
					this._TransferedRegionID = value;
					this.SendPropertyChanged("TransferedRegionID");
					this.OnTransferedRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRStudentRegionInfo")]
	public partial class MSRStudentRegionInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _RegionID;
		
		private System.Nullable<int> _StudentID;
		
		private System.Nullable<bool> _TransferedTo;
		
		private System.Nullable<int> _StudentRegionID;
		
		private int _StReID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnStudentIDChanging(System.Nullable<int> value);
    partial void OnStudentIDChanged();
    partial void OnTransferedToChanging(System.Nullable<bool> value);
    partial void OnTransferedToChanged();
    partial void OnStudentRegionIDChanging(System.Nullable<int> value);
    partial void OnStudentRegionIDChanged();
    partial void OnStReIDChanging(int value);
    partial void OnStReIDChanged();
    #endregion
		
		public MSRStudentRegionInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferedTo", DbType="Bit")]
		public System.Nullable<bool> TransferedTo
		{
			get
			{
				return this._TransferedTo;
			}
			set
			{
				if ((this._TransferedTo != value))
				{
					this.OnTransferedToChanging(value);
					this.SendPropertyChanging();
					this._TransferedTo = value;
					this.SendPropertyChanged("TransferedTo");
					this.OnTransferedToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentRegionID", DbType="Int")]
		public System.Nullable<int> StudentRegionID
		{
			get
			{
				return this._StudentRegionID;
			}
			set
			{
				if ((this._StudentRegionID != value))
				{
					this.OnStudentRegionIDChanging(value);
					this.SendPropertyChanging();
					this._StudentRegionID = value;
					this.SendPropertyChanged("StudentRegionID");
					this.OnStudentRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StReID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StReID
		{
			get
			{
				return this._StReID;
			}
			set
			{
				if ((this._StReID != value))
				{
					this.OnStReIDChanging(value);
					this.SendPropertyChanging();
					this._StReID = value;
					this.SendPropertyChanged("StReID");
					this.OnStReIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRTrainingProgramInfo")]
	public partial class MSRTrainingProgramInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrainingProgramID;
		
		private string _TrainingProgramName;
		
		private System.Nullable<int> _TotalChange;
		
		private System.Nullable<int> _WeightDiscPrf;
		
		private System.Nullable<double> _CoefficientSumDes;
		
		private System.Nullable<double> _CoefficientMinDes;
		
		private System.Nullable<double> _CoefficientResCap;
		
		private System.Nullable<double> _CoefficientEmrCap;
		
		private System.Nullable<double> _CoefficientMinCap;
		
		private System.Nullable<double> _CoefficientUnusedAcco;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingProgramIDChanging(int value);
    partial void OnTrainingProgramIDChanged();
    partial void OnTrainingProgramNameChanging(string value);
    partial void OnTrainingProgramNameChanged();
    partial void OnTotalChangeChanging(System.Nullable<int> value);
    partial void OnTotalChangeChanged();
    partial void OnWeightDiscPrfChanging(System.Nullable<int> value);
    partial void OnWeightDiscPrfChanged();
    partial void OnCoefficientSumDesChanging(System.Nullable<double> value);
    partial void OnCoefficientSumDesChanged();
    partial void OnCoefficientMinDesChanging(System.Nullable<double> value);
    partial void OnCoefficientMinDesChanged();
    partial void OnCoefficientResCapChanging(System.Nullable<double> value);
    partial void OnCoefficientResCapChanged();
    partial void OnCoefficientEmrCapChanging(System.Nullable<double> value);
    partial void OnCoefficientEmrCapChanged();
    partial void OnCoefficientMinCapChanging(System.Nullable<double> value);
    partial void OnCoefficientMinCapChanged();
    partial void OnCoefficientUnusedAccoChanging(System.Nullable<double> value);
    partial void OnCoefficientUnusedAccoChanged();
    #endregion
		
		public MSRTrainingProgramInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingProgramID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrainingProgramID
		{
			get
			{
				return this._TrainingProgramID;
			}
			set
			{
				if ((this._TrainingProgramID != value))
				{
					this.OnTrainingProgramIDChanging(value);
					this.SendPropertyChanging();
					this._TrainingProgramID = value;
					this.SendPropertyChanged("TrainingProgramID");
					this.OnTrainingProgramIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingProgramName", DbType="NVarChar(50)")]
		public string TrainingProgramName
		{
			get
			{
				return this._TrainingProgramName;
			}
			set
			{
				if ((this._TrainingProgramName != value))
				{
					this.OnTrainingProgramNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingProgramName = value;
					this.SendPropertyChanged("TrainingProgramName");
					this.OnTrainingProgramNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalChange", DbType="Int")]
		public System.Nullable<int> TotalChange
		{
			get
			{
				return this._TotalChange;
			}
			set
			{
				if ((this._TotalChange != value))
				{
					this.OnTotalChangeChanging(value);
					this.SendPropertyChanging();
					this._TotalChange = value;
					this.SendPropertyChanged("TotalChange");
					this.OnTotalChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightDiscPrf", DbType="Int")]
		public System.Nullable<int> WeightDiscPrf
		{
			get
			{
				return this._WeightDiscPrf;
			}
			set
			{
				if ((this._WeightDiscPrf != value))
				{
					this.OnWeightDiscPrfChanging(value);
					this.SendPropertyChanging();
					this._WeightDiscPrf = value;
					this.SendPropertyChanged("WeightDiscPrf");
					this.OnWeightDiscPrfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoefficientSumDes", DbType="Float")]
		public System.Nullable<double> CoefficientSumDes
		{
			get
			{
				return this._CoefficientSumDes;
			}
			set
			{
				if ((this._CoefficientSumDes != value))
				{
					this.OnCoefficientSumDesChanging(value);
					this.SendPropertyChanging();
					this._CoefficientSumDes = value;
					this.SendPropertyChanged("CoefficientSumDes");
					this.OnCoefficientSumDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoefficientMinDes", DbType="Float")]
		public System.Nullable<double> CoefficientMinDes
		{
			get
			{
				return this._CoefficientMinDes;
			}
			set
			{
				if ((this._CoefficientMinDes != value))
				{
					this.OnCoefficientMinDesChanging(value);
					this.SendPropertyChanging();
					this._CoefficientMinDes = value;
					this.SendPropertyChanged("CoefficientMinDes");
					this.OnCoefficientMinDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoefficientResCap", DbType="Float")]
		public System.Nullable<double> CoefficientResCap
		{
			get
			{
				return this._CoefficientResCap;
			}
			set
			{
				if ((this._CoefficientResCap != value))
				{
					this.OnCoefficientResCapChanging(value);
					this.SendPropertyChanging();
					this._CoefficientResCap = value;
					this.SendPropertyChanged("CoefficientResCap");
					this.OnCoefficientResCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoefficientEmrCap", DbType="Float")]
		public System.Nullable<double> CoefficientEmrCap
		{
			get
			{
				return this._CoefficientEmrCap;
			}
			set
			{
				if ((this._CoefficientEmrCap != value))
				{
					this.OnCoefficientEmrCapChanging(value);
					this.SendPropertyChanging();
					this._CoefficientEmrCap = value;
					this.SendPropertyChanged("CoefficientEmrCap");
					this.OnCoefficientEmrCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoefficientMinCap", DbType="Float")]
		public System.Nullable<double> CoefficientMinCap
		{
			get
			{
				return this._CoefficientMinCap;
			}
			set
			{
				if ((this._CoefficientMinCap != value))
				{
					this.OnCoefficientMinCapChanging(value);
					this.SendPropertyChanging();
					this._CoefficientMinCap = value;
					this.SendPropertyChanged("CoefficientMinCap");
					this.OnCoefficientMinCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoefficientUnusedAcco", DbType="Float")]
		public System.Nullable<double> CoefficientUnusedAcco
		{
			get
			{
				return this._CoefficientUnusedAcco;
			}
			set
			{
				if ((this._CoefficientUnusedAcco != value))
				{
					this.OnCoefficientUnusedAccoChanging(value);
					this.SendPropertyChanging();
					this._CoefficientUnusedAcco = value;
					this.SendPropertyChanged("CoefficientUnusedAcco");
					this.OnCoefficientUnusedAccoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRWardDiscHospitalInfo")]
	public partial class MSRWardDiscHospitalInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DisciplineWardHospitalID;
		
		private System.Nullable<int> _DisciplineID;
		
		private System.Nullable<int> _WardID;
		
		private System.Nullable<int> _HospitalID;
		
		private System.Nullable<int> _HospitalWardID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisciplineWardHospitalIDChanging(int value);
    partial void OnDisciplineWardHospitalIDChanged();
    partial void OnDisciplineIDChanging(System.Nullable<int> value);
    partial void OnDisciplineIDChanged();
    partial void OnWardIDChanging(System.Nullable<int> value);
    partial void OnWardIDChanged();
    partial void OnHospitalIDChanging(System.Nullable<int> value);
    partial void OnHospitalIDChanged();
    partial void OnHospitalWardIDChanging(System.Nullable<int> value);
    partial void OnHospitalWardIDChanged();
    #endregion
		
		public MSRWardDiscHospitalInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineWardHospitalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DisciplineWardHospitalID
		{
			get
			{
				return this._DisciplineWardHospitalID;
			}
			set
			{
				if ((this._DisciplineWardHospitalID != value))
				{
					this.OnDisciplineWardHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineWardHospitalID = value;
					this.SendPropertyChanged("DisciplineWardHospitalID");
					this.OnDisciplineWardHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineID", DbType="Int")]
		public System.Nullable<int> DisciplineID
		{
			get
			{
				return this._DisciplineID;
			}
			set
			{
				if ((this._DisciplineID != value))
				{
					this.OnDisciplineIDChanging(value);
					this.SendPropertyChanging();
					this._DisciplineID = value;
					this.SendPropertyChanged("DisciplineID");
					this.OnDisciplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardID", DbType="Int")]
		public System.Nullable<int> WardID
		{
			get
			{
				return this._WardID;
			}
			set
			{
				if ((this._WardID != value))
				{
					this.OnWardIDChanging(value);
					this.SendPropertyChanging();
					this._WardID = value;
					this.SendPropertyChanged("WardID");
					this.OnWardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", DbType="Int")]
		public System.Nullable<int> HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					this.OnHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalID = value;
					this.SendPropertyChanged("HospitalID");
					this.OnHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalWardID", DbType="Int")]
		public System.Nullable<int> HospitalWardID
		{
			get
			{
				return this._HospitalWardID;
			}
			set
			{
				if ((this._HospitalWardID != value))
				{
					this.OnHospitalWardIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalWardID = value;
					this.SendPropertyChanged("HospitalWardID");
					this.OnHospitalWardIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRWardHospitalDemandInfo")]
	public partial class MSRWardHospitalDemandInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _HospitalID;
		
		private string _HospitalName;
		
		private System.Nullable<int> _HospitalWardID;
		
		private System.Nullable<int> _MinDemHospitalWardPeriod;
		
		private System.Nullable<int> _MaxDemHospitalWardPeriod;
		
		private System.Nullable<int> _ResDemHospitalWardPeriod;
		
		private System.Nullable<int> _EmrDemHospitalWardPeriod;
		
		private int _WardHospitalDemandPeriod;
		
		private System.Nullable<int> _MaxDemHospitalWardYear;
		
		private System.Nullable<int> _MinDemHospitalWardYear;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHospitalIDChanging(System.Nullable<int> value);
    partial void OnHospitalIDChanged();
    partial void OnHospitalNameChanging(string value);
    partial void OnHospitalNameChanged();
    partial void OnHospitalWardIDChanging(System.Nullable<int> value);
    partial void OnHospitalWardIDChanged();
    partial void OnMinDemHospitalWardPeriodChanging(System.Nullable<int> value);
    partial void OnMinDemHospitalWardPeriodChanged();
    partial void OnMaxDemHospitalWardPeriodChanging(System.Nullable<int> value);
    partial void OnMaxDemHospitalWardPeriodChanged();
    partial void OnResDemHospitalWardPeriodChanging(System.Nullable<int> value);
    partial void OnResDemHospitalWardPeriodChanged();
    partial void OnEmrDemHospitalWardPeriodChanging(System.Nullable<int> value);
    partial void OnEmrDemHospitalWardPeriodChanged();
    partial void OnWardHospitalDemandPeriodChanging(int value);
    partial void OnWardHospitalDemandPeriodChanged();
    partial void OnMaxDemHospitalWardYearChanging(System.Nullable<int> value);
    partial void OnMaxDemHospitalWardYearChanged();
    partial void OnMinDemHospitalWardYearChanging(System.Nullable<int> value);
    partial void OnMinDemHospitalWardYearChanged();
    #endregion
		
		public MSRWardHospitalDemandInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", DbType="Int")]
		public System.Nullable<int> HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					this.OnHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalID = value;
					this.SendPropertyChanged("HospitalID");
					this.OnHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalName", DbType="NVarChar(50)")]
		public string HospitalName
		{
			get
			{
				return this._HospitalName;
			}
			set
			{
				if ((this._HospitalName != value))
				{
					this.OnHospitalNameChanging(value);
					this.SendPropertyChanging();
					this._HospitalName = value;
					this.SendPropertyChanged("HospitalName");
					this.OnHospitalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalWardID", DbType="Int")]
		public System.Nullable<int> HospitalWardID
		{
			get
			{
				return this._HospitalWardID;
			}
			set
			{
				if ((this._HospitalWardID != value))
				{
					this.OnHospitalWardIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalWardID = value;
					this.SendPropertyChanged("HospitalWardID");
					this.OnHospitalWardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinDemHospitalWardPeriod", DbType="Int")]
		public System.Nullable<int> MinDemHospitalWardPeriod
		{
			get
			{
				return this._MinDemHospitalWardPeriod;
			}
			set
			{
				if ((this._MinDemHospitalWardPeriod != value))
				{
					this.OnMinDemHospitalWardPeriodChanging(value);
					this.SendPropertyChanging();
					this._MinDemHospitalWardPeriod = value;
					this.SendPropertyChanged("MinDemHospitalWardPeriod");
					this.OnMinDemHospitalWardPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDemHospitalWardPeriod", DbType="Int")]
		public System.Nullable<int> MaxDemHospitalWardPeriod
		{
			get
			{
				return this._MaxDemHospitalWardPeriod;
			}
			set
			{
				if ((this._MaxDemHospitalWardPeriod != value))
				{
					this.OnMaxDemHospitalWardPeriodChanging(value);
					this.SendPropertyChanging();
					this._MaxDemHospitalWardPeriod = value;
					this.SendPropertyChanged("MaxDemHospitalWardPeriod");
					this.OnMaxDemHospitalWardPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResDemHospitalWardPeriod", DbType="Int")]
		public System.Nullable<int> ResDemHospitalWardPeriod
		{
			get
			{
				return this._ResDemHospitalWardPeriod;
			}
			set
			{
				if ((this._ResDemHospitalWardPeriod != value))
				{
					this.OnResDemHospitalWardPeriodChanging(value);
					this.SendPropertyChanging();
					this._ResDemHospitalWardPeriod = value;
					this.SendPropertyChanged("ResDemHospitalWardPeriod");
					this.OnResDemHospitalWardPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmrDemHospitalWardPeriod", DbType="Int")]
		public System.Nullable<int> EmrDemHospitalWardPeriod
		{
			get
			{
				return this._EmrDemHospitalWardPeriod;
			}
			set
			{
				if ((this._EmrDemHospitalWardPeriod != value))
				{
					this.OnEmrDemHospitalWardPeriodChanging(value);
					this.SendPropertyChanging();
					this._EmrDemHospitalWardPeriod = value;
					this.SendPropertyChanged("EmrDemHospitalWardPeriod");
					this.OnEmrDemHospitalWardPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardHospitalDemandPeriod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WardHospitalDemandPeriod
		{
			get
			{
				return this._WardHospitalDemandPeriod;
			}
			set
			{
				if ((this._WardHospitalDemandPeriod != value))
				{
					this.OnWardHospitalDemandPeriodChanging(value);
					this.SendPropertyChanging();
					this._WardHospitalDemandPeriod = value;
					this.SendPropertyChanged("WardHospitalDemandPeriod");
					this.OnWardHospitalDemandPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDemHospitalWardYear", DbType="Int")]
		public System.Nullable<int> MaxDemHospitalWardYear
		{
			get
			{
				return this._MaxDemHospitalWardYear;
			}
			set
			{
				if ((this._MaxDemHospitalWardYear != value))
				{
					this.OnMaxDemHospitalWardYearChanging(value);
					this.SendPropertyChanging();
					this._MaxDemHospitalWardYear = value;
					this.SendPropertyChanged("MaxDemHospitalWardYear");
					this.OnMaxDemHospitalWardYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinDemHospitalWardYear", DbType="Int")]
		public System.Nullable<int> MinDemHospitalWardYear
		{
			get
			{
				return this._MinDemHospitalWardYear;
			}
			set
			{
				if ((this._MinDemHospitalWardYear != value))
				{
					this.OnMinDemHospitalWardYearChanging(value);
					this.SendPropertyChanging();
					this._MinDemHospitalWardYear = value;
					this.SendPropertyChanged("MinDemHospitalWardYear");
					this.OnMinDemHospitalWardYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSRDiscDurationPrInfo")]
	public partial class MSRDiscDurationPrInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscDurationPrID;
		
		private System.Nullable<int> _DiscplineID;
		
		private System.Nullable<int> _TrainginProgramID;
		
		private int _Duration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscDurationPrIDChanging(int value);
    partial void OnDiscDurationPrIDChanged();
    partial void OnDiscplineIDChanging(System.Nullable<int> value);
    partial void OnDiscplineIDChanged();
    partial void OnTrainginProgramIDChanging(System.Nullable<int> value);
    partial void OnTrainginProgramIDChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    #endregion
		
		public MSRDiscDurationPrInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscDurationPrID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscDurationPrID
		{
			get
			{
				return this._DiscDurationPrID;
			}
			set
			{
				if ((this._DiscDurationPrID != value))
				{
					this.OnDiscDurationPrIDChanging(value);
					this.SendPropertyChanging();
					this._DiscDurationPrID = value;
					this.SendPropertyChanged("DiscDurationPrID");
					this.OnDiscDurationPrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscplineID", DbType="Int")]
		public System.Nullable<int> DiscplineID
		{
			get
			{
				return this._DiscplineID;
			}
			set
			{
				if ((this._DiscplineID != value))
				{
					this.OnDiscplineIDChanging(value);
					this.SendPropertyChanging();
					this._DiscplineID = value;
					this.SendPropertyChanged("DiscplineID");
					this.OnDiscplineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainginProgramID", DbType="Int")]
		public System.Nullable<int> TrainginProgramID
		{
			get
			{
				return this._TrainginProgramID;
			}
			set
			{
				if ((this._TrainginProgramID != value))
				{
					this.OnTrainginProgramIDChanging(value);
					this.SendPropertyChanging();
					this._TrainginProgramID = value;
					this.SendPropertyChanged("TrainginProgramID");
					this.OnTrainginProgramIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int NOT NULL")]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
